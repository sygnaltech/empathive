{
  "version": 3,
  "sources": ["../../src/page/apply.ts"],
  "sourcesContent": ["\n/** \n * Page | Application\n * \n * https://codepen.io/memetican/pen/MWRORwZ/8c423b39af936435a271fbdd2350b710\n */\n\nimport { IRouteHandler } from \"@sygnal/sse\";\n \nconst MAILJET_TEMPLATE_YES = '5842233';\nconst MAILJET_TEMPLATE_NO = '5836300';\nconst MAILJET_TEMPLATE_APPLY = '5842234';\n\nexport class ApplicationPage implements IRouteHandler {\n\n  form: HTMLFormElement | null = null; \n\n  constructor() {\n  }\n\n  setup() {\n        \n  }\n\n  exec() {\n\n    const div = document.getElementById('application') as HTMLDivElement | null;\n    if (!div) {\n        console.error(\"Div with ID 'application' not found.\");\n        return;\n    }\n\n    this.form = div.querySelector('form') as HTMLFormElement | null;\n    if (!this.form) {\n        console.error(\"Form inside 'application' div not found.\");\n        return;\n    }\n\n    this.initializeForm();\n\n  }\n\n  /**\n   * Display WaitButton \n   * Hides forms submit button, displays wait button \n   * @param formElement \n   */\n\n  private waitButton(formElement: HTMLFormElement): void {\n//      console.log(\"display waitButton\");\n\n      const actualButton = formElement.querySelector('[button-submit=\"actual\"]') as HTMLElement | null;\n      if (actualButton) {\n          actualButton.style.display = 'none';\n      }\n\n      const waitButton = formElement.querySelector('[button-submit=\"wait\"]') as HTMLElement | null;\n      if (waitButton) {\n          waitButton.style.display = 'block';\n      }\n  }\n\n  private initializeForm(): void {\n\n// console.log(\"init form\"); \n\n\n      // Get customerId ( Airtable ID ) \n      // from local storage \n      const savedId = localStorage.getItem('customerId');\n      if (savedId) {\n//        console.log(\"init form\", savedId); \n        const inputElement = this.form!.querySelector('#airtableId') as HTMLInputElement | null;\n//        console.log(\"init form\", inputElement); \n          if (inputElement) {\n  //            console.log(savedId);\n              inputElement.value = savedId;\n          }\n      } else {\n          console.log('No ID found in localStorage.');\n      }\n\n      console.log(\"adding event listener for form submit\");\n\n      this.form!.addEventListener('submit', this.handleFormSubmit.bind(this, this.form!));\n  }\n\n  private determineEmailTemplate(): string {\n\n    return MAILJET_TEMPLATE_YES; \n\n    // #region\n    \n    // const selectElement = document.getElementById('Tuition') as HTMLSelectElement | null;\n    // const selectedValue = selectElement?.value.toLowerCase();\n\n    // let mappedId: string | null;\n\n    // switch (selectedValue) {\n    //     case 'yes':\n    //         mappedId = MAILJET_TEMPLATE_YES;\n    //         break;\n    //     case 'no':\n    //         mappedId = MAILJET_TEMPLATE_NO;\n    //         break;\n    //     case 'apply':\n    //         mappedId = MAILJET_TEMPLATE_APPLY;\n    //         break;\n    //     default:\n    //         mappedId = null;\n    //         console.error(\"Unable to identify template ID\");\n    // }\n\n    // return mappedId?.toString() || '';\n\n    // #endregion\n\n  }\n\n  private handleFormSubmit(form: HTMLFormElement, event: Event): void {\n      event.preventDefault();\n\n      console.log(\"formdata\", form);\n\n      // Display wait button\n      this.waitButton(form);\n\n      // Determine MailJet email template ID \n      const inputElement = this.form!.querySelector('#emailTemplateId') as HTMLInputElement | null;\n      if (inputElement) {\n          inputElement.value = this.determineEmailTemplate();\n      }\n\n      const formData = new FormData(form);\n      const jsonData: { [key: string]: FormDataEntryValue } = {};\n      formData.forEach((value, key) => {\n          jsonData[key] = value;\n      });\n\n      const redirectUrl = form.getAttribute('data-redirect') || '';\n      const webhookUrl = form.getAttribute('action') || '';\n\n      console.log(jsonData);\n\n      fetch(webhookUrl, {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(jsonData),\n      })\n      .then(response => response.json())\n      .then(data => {\n\n          window.location.href = '/final/thank-you';\n\n          // const urls: { [key: string]: string } = {\n          //     'yes': '/final/thank-you', \n          //     'no': '/final/thank-you',\n          //     'apply': '/final/finance'\n          // };\n\n          // if (selectedValue && urls[selectedValue]) {\n          //     window.location.href = urls[selectedValue];\n          // } else {\n          //     console.error('Invalid selection');\n          // }\n      })\n      .catch(error => {\n          console.error('Error submitting form to webhook:', error);\n      });\n  }\n\n}\n"],
  "mappings": ";;;AASA,MAAM,uBAAuB;AAItB,MAAM,kBAAN,MAA+C;AAAA,IAIpD,cAAc;AAFd,kBAA+B;AAAA,IAG/B;AAAA,IAEA,QAAQ;AAAA,IAER;AAAA,IAEA,OAAO;AAEL,YAAM,MAAM,SAAS,eAAe,aAAa;AACjD,UAAI,CAAC,KAAK;AACN,gBAAQ,MAAM,sCAAsC;AACpD;AAAA,MACJ;AAEA,WAAK,OAAO,IAAI,cAAc,MAAM;AACpC,UAAI,CAAC,KAAK,MAAM;AACZ,gBAAQ,MAAM,0CAA0C;AACxD;AAAA,MACJ;AAEA,WAAK,eAAe;AAAA,IAEtB;AAAA,IAQQ,WAAW,aAAoC;AAGnD,YAAM,eAAe,YAAY,cAAc,0BAA0B;AACzE,UAAI,cAAc;AACd,qBAAa,MAAM,UAAU;AAAA,MACjC;AAEA,YAAM,aAAa,YAAY,cAAc,wBAAwB;AACrE,UAAI,YAAY;AACZ,mBAAW,MAAM,UAAU;AAAA,MAC/B;AAAA,IACJ;AAAA,IAEQ,iBAAuB;AAO3B,YAAM,UAAU,aAAa,QAAQ,YAAY;AACjD,UAAI,SAAS;AAEX,cAAM,eAAe,KAAK,KAAM,cAAc,aAAa;AAEzD,YAAI,cAAc;AAEd,uBAAa,QAAQ;AAAA,QACzB;AAAA,MACJ,OAAO;AACH,gBAAQ,IAAI,8BAA8B;AAAA,MAC9C;AAEA,cAAQ,IAAI,uCAAuC;AAEnD,WAAK,KAAM,iBAAiB,UAAU,KAAK,iBAAiB,KAAK,MAAM,KAAK,IAAK,CAAC;AAAA,IACtF;AAAA,IAEQ,yBAAiC;AAEvC,aAAO;AAAA,IA4BT;AAAA,IAEQ,iBAAiB,MAAuB,OAAoB;AAChE,YAAM,eAAe;AAErB,cAAQ,IAAI,YAAY,IAAI;AAG5B,WAAK,WAAW,IAAI;AAGpB,YAAM,eAAe,KAAK,KAAM,cAAc,kBAAkB;AAChE,UAAI,cAAc;AACd,qBAAa,QAAQ,KAAK,uBAAuB;AAAA,MACrD;AAEA,YAAM,WAAW,IAAI,SAAS,IAAI;AAClC,YAAM,WAAkD,CAAC;AACzD,eAAS,QAAQ,CAAC,OAAO,QAAQ;AAC7B,iBAAS,OAAO;AAAA,MACpB,CAAC;AAED,YAAM,cAAc,KAAK,aAAa,eAAe,KAAK;AAC1D,YAAM,aAAa,KAAK,aAAa,QAAQ,KAAK;AAElD,cAAQ,IAAI,QAAQ;AAEpB,YAAM,YAAY;AAAA,QACd,QAAQ;AAAA,QACR,SAAS;AAAA,UACL,gBAAgB;AAAA,QACpB;AAAA,QACA,MAAM,KAAK,UAAU,QAAQ;AAAA,MACjC,CAAC,EACA,KAAK,cAAY,SAAS,KAAK,CAAC,EAChC,KAAK,UAAQ;AAEV,eAAO,SAAS,OAAO;AAAA,MAa3B,CAAC,EACA,MAAM,WAAS;AACZ,gBAAQ,MAAM,qCAAqC,KAAK;AAAA,MAC5D,CAAC;AAAA,IACL;AAAA,EAEF;",
  "names": []
}
